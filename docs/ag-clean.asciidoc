= ag-clean(1) =

== NAME ==
ag-clean - clean component.

== SYNOPSIS ==
[verse]
'ag clean' [-n | --dry-run] [<component1> <component2> ...]

[verse]
'ag clean' [-n | --dry-run] up [-t <component>]

[verse]
'ag clean' [-n | --dry-run] down [-t <component>]

== DESCRIPTION ==
Cleans components.

`ag clean`::
    Cleans current component or all the specified components. Components are specified by their names or aliases.

`ag clean up`::
    Performs upstream cleaning for the current component, i.e. cleans all components this component depends on (directly or indirectly), then cleans this component.

`ag clean down`::
    Performs downstream cleaning for the current component, i.e. cleans this component, then cleans all components, which are directly or indirectly depend on this component.

== OPTIONS ==

-n::
--dry-run::
    Don't do actual cleaning, just print component names to be cleaned.

-t::
--to::
    Terminator for upstream/downstream cleaning. Do not clean components above the specified component for upstream. Do not clean components below the specified component for downstream. 

== EXAMPLES ==

Clean current component:

--------------------------------------------------------------
    ag clean
--------------------------------------------------------------

Clean some components:

--------------------------------------------------------------
    ag clean comp_name1 comp_alias2 comp_name3
--------------------------------------------------------------

Clean all dependencies of this component until comp1 (inclusive), then clean this component:

--------------------------------------------------------------
    ag clean up -t comp1
--------------------------------------------------------------
